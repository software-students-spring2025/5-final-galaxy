name: llm CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install -r llm/requirements.txt
          pip install pytest pytest-cov  # Added for testing

      - name: Run unit tests
        run: |
          cd llm
          pytest --cov=. --cov-report=xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image (CI only)
        uses: docker/build-push-action@v3
        with:
          context: ./llm
          file: ./llm/Dockerfile
          push: false

  deploy:
    needs: test-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push llm
        uses: docker/build-push-action@v3
        with:
          context: ./llm
          file: ./llm/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/stock-llm:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/stock-llm:${{ github.sha }}

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            cd ~/stock-app
            echo "Pulling latest LLM image..."
            docker-compose -f docker-compose.prod.yml pull llm
            echo "Restarting LLM service..."
            docker-compose -f docker-compose.prod.yml up -d llm
            echo "Deployment complete!"
            docker ps